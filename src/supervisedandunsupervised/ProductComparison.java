/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package supervisedandunsupervised;

import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import static supervisedandunsupervised.MainFrame.allReviews;

/**
 *
 * @author Elcot
 */
public class ProductComparison extends javax.swing.JFrame {

    /**
     * Creates new form ProductComparison
     */
    ArrayList allProducts;    
    
    public ProductComparison() {
        initComponents();
        
        addcombo();
    }
    
    public final void addcombo()
    {
        allProducts=MainFrame.allProducts;
        
        for(int i=0;i<allProducts.size();i++)
        {
            String s=allProducts.get(i).toString().trim();
            
            jComboBox1.addItem(s.trim());
            jComboBox2.addItem(s.trim());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 0));

        jLabel1.setFont(new java.awt.Font("Andalus", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Product Comparison");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(271, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(260, 260, 260))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jButton1.setText("Compare");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Choose Product 1:");

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setText("Extract Opinion Targets & Opinion Words");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Choose Product 2:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox2, 0, 409, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(0, 27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ExtractOpinions eo=new ExtractOpinions();
        eo.setTitle("Extract Opinions");
        eo.setVisible(true);
        eo.setResizable(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        ArrayList posWd=new ArrayList();
        ArrayList negWd=new ArrayList();
        
        try
        {
             //// Read Posivie words
             
            File fe1=new File("Positive.txt");
            FileInputStream fis1=new FileInputStream(fe1);
            byte data1[]=new byte[fis1.available()];
            fis1.read(data1);
            fis1.close();
            
            String sg1[]=new String(data1).split("\n");
               
            for(int i=0;i<sg1.length;i++)
                posWd.add(sg1[i].trim());
             
             ///////Read negative word
             
            File fe2=new File("Negative.txt");
            FileInputStream fis2=new FileInputStream(fe2);
            byte data2[]=new byte[fis2.available()];
            fis2.read(data2);
            fis2.close();
            
            String sg2[]=new String(data2).split("\n");
               
            for(int i=0;i<sg2.length;i++)
                negWd.add(sg2[i].trim());
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        
        jTextArea1.setText("");
        
        String product1=jComboBox1.getSelectedItem().toString().trim();
        String product2=jComboBox2.getSelectedItem().toString().trim();                
        
        if(!(product1.trim().equals(product2.trim())))
        {
            jTextArea1.append("Product 1: "+product1.trim()+"\n");
            jTextArea1.append("Product 2: "+product2.trim()+"\n\n");
            
            String p1Rev="",p2Rev="";
            
            for(int i=0;i<allProducts.size();i++)
            {
                String productId=allProducts.get(i).toString().trim();
                String review=allReviews.get(i).toString().trim();
                
                if(productId.trim().equals(product1.trim()))
                {
                    p1Rev=p1Rev+review.trim()+"\n";
                }
                if(productId.trim().equals(product2.trim()))
                {
                    p2Rev=p2Rev+review.trim()+"\n";
                }
            }
            
            String product1Review=p1Rev.substring(0,p1Rev.lastIndexOf('\n'));
            String product2Review=p2Rev.substring(0,p2Rev.lastIndexOf('\n'));
            
            jTextArea1.append("Product 1 Review:\n"+product1Review.trim()+"\n\n");
            jTextArea1.append("Product 2 Review:\n"+product2Review.trim()+"\n\n");
            
            String sp[]=product1Review.trim().split("\n");
            String sp1[]=product2Review.trim().split("\n");
            
            String p1deci="Positive",p2deci="Positive";
            
            try
            {
                int pos=0,neg=0;
                for(int i=0;i<sp.length;i++)
                {
                    String rev=sp[i].trim().replaceAll("[^\\w\\s]", "");     // replace all symbols
                    String g2[]=rev.trim().split(" ");

                    for(int j=0;j<g2.length;j++)
                    {
                        String g3=g2[j].trim();
                        if(posWd.contains(g3.trim()))
                        {
                            pos++;
                        }
                        if(negWd.contains(g3.trim()))
                        {
                            neg++;
                        }
                    }                
                }
                if(pos<neg)
                {
                    p1deci="Negative";
                }
                if(p1deci.trim().equals("Positive"))
                {
                    jTextArea1.append("Product 1 has more Positive Reviews! So you can buy this product!\n");
                }
                else
                {
                    jTextArea1.append("Product 1 has more Negative Reviews! So you don't buy this product!\n");
                }
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
            try
            {
                int pos=0,neg=0;
                for(int i=0;i<sp1.length;i++)
                {
                    String rev=sp1[i].trim().replaceAll("[^\\w\\s]", "");     // replace all symbols
                    String g2[]=rev.trim().split(" ");

                    for(int j=0;j<g2.length;j++)
                    {
                        String g3=g2[j].trim();
                        if(posWd.contains(g3.trim()))
                        {
                            pos++;
                        }
                        if(negWd.contains(g3.trim()))
                        {
                            neg++;
                        }
                    }                
                }
                if(pos<neg)
                {
                    p2deci="Negative";
                }
                if(p2deci.trim().equals("Positive"))
                {
                    jTextArea1.append("Product 2 has more Positive Reviews! So you can buy this product!\n");
                }
                else
                {
                    jTextArea1.append("Product 2 has more Negative Reviews! So you don't buy this product!\n");
                }
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this,"Condition: Both Products are not Equal! Please Select Different!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductComparison.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductComparison.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductComparison.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductComparison.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductComparison().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
