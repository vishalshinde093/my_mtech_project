/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package supervisedandunsupervised;

import edu.smu.tspell.wordnet.Synset;
import edu.smu.tspell.wordnet.WordNetDatabase;
import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;

/**
 *
 * @author Elcot
 */
public class CategorySeedWords extends javax.swing.JFrame {

    /**
     * Creates new form CategorySeedWords
     */
    
    public static ArrayList seedWords=new ArrayList();
    public static ArrayList seedWordSets=new ArrayList();
    public static ArrayList newSeedWords=new ArrayList();
    
    public CategorySeedWords() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 102, 0));

        jLabel1.setFont(new java.awt.Font("Andalus", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Identify Category Seed Word Sets");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(jLabel1)
                .addContainerGap(167, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jButton1.setText("Identify Category Seed Words");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Identify Category Seed Word Sets");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton3.setText("Generate Co-Occurence Matrix (X) with Occurence Vector (N)");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        jTextArea1.append("==========================================================\n           Category Seed Words\n==========================================================\n");
        
        ArrayList allReviews=MainFrame.allReviews;        
        
                /* Preprocessing */
        
        ArrayList slang1=new ArrayList();
        ArrayList slang2=new ArrayList();
        ArrayList stop1=new ArrayList();
        
        edu.stanford.nlp.tagger.maxent.MaxentTagger ob = null;
        
        try
        {
            ob=new edu.stanford.nlp.tagger.maxent.MaxentTagger(".\\models\\left3words-distsim-wsj-0-18.tagger");
            
            File fe=new File("Slang.txt");
            FileInputStream fis=new FileInputStream(fe);
            byte data[]=new byte[fis.available()];
            fis.read(data);
            fis.close();
              
            String s1[]=new String(data).split("\n");            
            
            for(int i=0;i<s1.length;i++)
            {
                String g1[]=s1[i].trim().split("#");
                slang1.add(g1[0].trim());
                slang2.add(g1[1].trim());
            }
            
            File fe2=new File("stopwords1.txt");
            FileInputStream fis2=new FileInputStream(fe2);
            byte data2[]=new byte[fis2.available()];
            fis2.read(data2);
            fis2.close();
                
            String sg2[]=new String(data2).split("\n");
               
            for(int i=0;i<sg2.length;i++)
                stop1.add(sg2[i].trim());
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }                
        
        for(int i=0;i<allReviews.size();i++)
        {
            String rev=allReviews.get(i).toString().toLowerCase().trim().replaceAll("[^\\w\\s]", "");     // replace all symbols
            
            String sp[]=rev.trim().split(" ");
            for(int j=0;j<sp.length;j++)
            {
                String word=sp[j].trim();
                
                if(!(stop1.contains(word.trim())))      // Remove all stopwords
                {
                    if(slang1.contains(word.trim()))    
                    {
                        int ind1=slang1.indexOf(word.trim());
                        word=slang2.get(ind1).toString().trim();        // Change slang words to normal word
                    }
                    
                    String ret=ob.tagString(word.trim());
                    if(ret.trim().contains("/NN"))
                    {
                        String seed[]=ret.trim().split("\\/");
                        String seedWord=seed[0].trim();
                        String pos=seed[1].trim();
                        if((pos.trim().equals("NN"))||(pos.trim().equals("NNP")))   // Extract Noun Singular
                        {
                            if(!(seedWords.contains(seedWord.trim())))
                            {
                                seedWords.add(seedWord.trim().toLowerCase());
                                jTextArea1.append(seedWord.trim().toLowerCase()+"\n");
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        jTextArea1.setText("");
        jTextArea1.append("==========================================================\n           Category Seed Word Sets\n==========================================================\n");
        
        try
        {        
            File f=new File("WordNet\\2.1\\dict");
            System.setProperty("wordnet.database.dir", f.toString());                                   
            WordNetDatabase database = WordNetDatabase.getFileInstance();            
            
            for(int i=0;i<seedWords.size();i++)
            {
                String seedWord=seedWords.get(i).toString().trim();
            
                    // Find all Synonyms of seedWord
                
                ArrayList synonyms=new ArrayList();
                String syn="";
                
                Synset[] synsets = database.getSynsets(seedWord);
                if (synsets.length > 0)
                {                    
                    for (int l = 0; l < synsets.length; l++)
                    {
                        String[] wordForms = synsets[l].getWordForms();
                        for (int j = 0; j < wordForms.length; j++)
                        {
                            if(!(synonyms.contains(wordForms[j].trim().toLowerCase().trim())))
                            {
                                synonyms.add(wordForms[j].trim().toLowerCase().trim());
                                syn=syn+wordForms[j].trim().toLowerCase().trim()+",";
                            }
                        }
                    }
                }
                String seedWordSet="-";
                if(!(syn.trim().equals("")))
                {
                    seedWordSet=syn.substring(0,syn.lastIndexOf(','));
                }
                if(!(seedWordSet.trim().equals("-")))
                {
                    seedWordSets.add(seedWord.trim().toLowerCase()+" --> "+seedWordSet.trim());
                    jTextArea1.append(seedWord.trim().toLowerCase()+": ["+seedWordSet.trim()+"]\n");
                    newSeedWords.add(seedWord.trim().toLowerCase());
                }
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        CoOccurMatrix com=new CoOccurMatrix();
        com.setTitle("Generate Co-Occurence Matrix (X) with Occurence Vector (N)");
        com.setVisible(true);
        com.setResizable(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CategorySeedWords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CategorySeedWords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CategorySeedWords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CategorySeedWords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CategorySeedWords().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
